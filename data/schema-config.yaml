topld:
  represented_as: edge
  inherit_properties: true
  label_in_input: topld
  label_as_edge: VARIANT_CORRELATION
  db_collection_name: variant_correlations
  db_collection_per_chromosome: false
  relationship:
    from: sequence variant
    to: sequence variant
  properties:
    chr: str
    ancestry: str
    negated: boolean
    variant_1_base_pair: str
    variant_2_base_pair: str
    r2: int

sequence variant:
  represented_as: node
  label_in_input: gnomad
  db_collection_name: variants
  db_collection_per_chromosome: false
  db_indexes:
    coordinates:
      type: persistent
      fields: pos:long
  accessible_via:
    name: variants
    description: 'Retrieve variants data. Example: chr = chr1'
    filter_by: _id, chr, pos
    return: _id, chr, pos, ref, alt, qual, filter, info
  properties:
    chr: str
    pos: int
    ref: str
    alt: str
    qual: str
    filter: str
    info: obj

gene:
  represented_as: node
  label_in_input: gencode_gene
  db_collection_name: genes
  db_collection_per_chromosome: false
  accessible_via:
    name: genes
    description: 'Retrieve gene information. Example: chr = chr1, gene_name = DDX11L1, gene_type = transcribed_unprocessed_pseudogene'
    filter_by: _id, chr, gene_name, gene_type
    filter_by_range: start, end
    return: _id, chr, gene_name, gene_type, start, end
  properties:
    chr: str
    start: str
    end: str
    gene_name: str
    gene_id: str
    gene_type: str

transcript:
  represented_as: node
  label_in_input: gencode_transcript
  db_collection_name: transcripts
  db_collection_per_chromosome: true
  properties:
    chr: str
    start: str
    end: str
    gene_name: str
    transcript_name: str
    transcript_id: str
    transcript_type: str

qtl:
  represented_as: edge
  label_in_input: qtl
  label_as_edge: VARIANT_GENE
  db_collection_name: variant_gene_links
  db_collection_per_chromosome: false
  relationship:
    from: sequence variant
    to: genes
  properties:
    biological_context: str
    chr: str
    p-value: int
    slope: int
    beta: int

caqtl:
  represented_as: edge
  label_in_input: caqtl
  label_as_edge: VARIANT_ACCESSIBLE_DNA_REGION
  db_collection_name: variant_accessible_dna_region_links
  db_collection_per_chromosome: false
  relationship:
    from: sequence variant
    to: accessible dna region
  properties:
    chr: str
    rsid: str

accessible dna region:
  represented_as: node
  label_in_input: accessible_dna_region
  db_collection_name: accessible_dna_regions
  db_collection_per_chromosome: false
  db_indexes:
    coordinates:
      type: zkd
      fields: start:long,end:long
  accessible_via:
    name: accessible_dna_regions
    description: 'Retrieve accessible dna regions data. Example: chr = chr1'
    filter_by: _id, chr
    filter_by_range: start, end
    return: _id, chr, start, end
  properties:
    chr: str
    start: int
    end: int
  aliases: [ 'dnase-seq accessible region', 'atac-seq accessible region' ]
  description: >-
    A region (or regions) of a chromatinized genome that has been measured to be more
    accessible to an enzyme such as DNase-I or Tn5 Transpose
  is_a: regulatory region
  mixins:
    - genomic entity
    - chemical entity or gene or gene product
    - physical essence
    - ontology class
  exact_mappings:
    - SO:0002231

regulatory region:
  represented_as: node
  aliases: [ 'regulatory element' ]
  description: >-
    A region (or regions) of the genome that contains known or putative regulatory elements
    that act in cis- or trans- to affect the transcription of gene
  is_a: biological entity
  mixins:
    - genomic entity
    - chemical entity or gene or gene product
    - physical essence
    - ontology class
  exact_mappings:
    - SO:0005836
    - SIO:001225
    - WIKIDATA:Q3238407
  label_in_input: candidate_cis_regulatory_element
  db_collection_name: candidate_cis_regulatory_elements
  db_collection_per_chromosome: false
  db_indexes:
    coordinates:
      type: zkd
      fields: start:long,end:long
  accessible_via:
    name: candidate_cis_regulatory_elements
    description: 'Retrieve cCRE data. Example: chr = chr1'
    filter_by: _id, chr, biochemical_activity
    filter_by_range: start, end
    return: _id, chr, start, end, biochemical_activity
  properties:
    chr: str
    start: int
    end: int
    biochemical_activity: str