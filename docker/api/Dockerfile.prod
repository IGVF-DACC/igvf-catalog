# Production Dockerfile for AWS CDK deployment
# Use Node.js 20.12-bookworm-slim as base image
FROM node:20.12-bookworm-slim AS base

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci

# Copy source code
COPY src/ ./src/
COPY config/ ./config/
COPY static/ ./static/
COPY data/schema-config.yaml ./data/schema-config.yaml
COPY tsconfig.json ./
COPY babel.config.js ./

# Build the application
RUN npm run build

# Production stage
FROM node:20.12-bookworm-slim AS production

# Install dumb-init for proper signal handling
RUN apt-get update && apt-get install -y dumb-init && rm -rf /var/lib/apt/lists/*

# Create app user
RUN groupadd -g 1001 nodejs
RUN useradd -u 1001 -g nodejs -s /bin/bash -m nodejs

# Set working directory
WORKDIR /app

# Copy built application from base stage
COPY --from=base --chown=nodejs:nodejs /app/dist ./dist
COPY --from=base --chown=nodejs:nodejs /app/package*.json ./
COPY --from=base --chown=nodejs:nodejs /app/config ./config
COPY --from=base --chown=nodejs:nodejs /app/static ./static
COPY --from=base --chown=nodejs:nodejs /app/data ./data

# Install only production dependencies
RUN npm ci --only=production

# Create logs directory
RUN mkdir -p /var/log/igvf-catalog && chown nodejs:nodejs /var/log/igvf-catalog

# Switch to non-root user
USER nodejs

# Expose port 2023 for production
EXPOSE 2023

# Start the application
ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "run", "start"]
